"""Adiciona coluna is_admin em users e altera tipo da coluna status em orders

Revision ID: af5229eb2522
Revises: 286705d3f228
Create Date: 2025-05-26 16:30:56.301588

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # Importar dialeto postgresql


# revision identifiers, used by Alembic.
revision: str = 'af5229eb2522'
down_revision: Union[str, None] = '286705d3f228'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Criar o tipo ENUM explicitamente antes de usá-lo
    order_status_enum = postgresql.ENUM(
        'pending', 'processing', 'shipped', 'delivered', 'cancelled', name='orderstatusenum', create_type=False
    )
    order_status_enum.create(op.get_bind())

    op.alter_column('orders', 'status',
               existing_type=sa.VARCHAR(),
               type_=order_status_enum,
               existing_nullable=True,
               postgresql_using="status::orderstatusenum")
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_admin')

    # Definir o tipo ENUM para referenciá-lo na exclusão
    order_status_enum = postgresql.ENUM(
        'pending', 'processing', 'shipped', 'delivered', 'cancelled', name='orderstatusenum', create_type=False
    )

    op.alter_column('orders', 'status',
               existing_type=order_status_enum,
               type_=sa.VARCHAR(),
               existing_nullable=True)

    # Excluir o tipo ENUM explicitamente após alterar a coluna
    order_status_enum.drop(op.get_bind())

    # ### end Alembic commands ###
